version: '3.5'

services:
  etcd:
    container_name: milvus-etcd-new
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - milvus

  minio:
    container_name: milvus-minio-new
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - milvus

  standalone:
    container_name: milvus-standalone-new
    image: milvusdb/milvus:v2.4.3
    command: ["milvus", "run", "standalone"]
    security_opt:
    - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - "etcd"
      - "minio"
    networks:
      - milvus

  postgres:
    image: postgres:16
    restart: always
    shm_size: 256mb
    volumes:
      - postgres_data_backend:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: reports
    ports:
      - "5432:5432"
    networks:
      - milvus

  ollama-service:
    image: ollama/ollama:0.1.48
    restart: always
    volumes:
      - ollama:/root/.ollama
      - ./entrypoint.sh:/entrypoint.sh
    ports:
      - "11435:11434"
    entrypoint: ["/usr/bin/bash", "/entrypoint.sh"]
    networks:
      - milvus

  scouting-llm-backend:
    image: scouting-llm-backend:1.0.0
    restart: always
    ports:
      - "5000:5000"
    environment:
      VECTOR_STORE_URL: http://standalone:19530
      OLLAMA_URI: http://ollama-service:11434
      MILVUS_HOST_NAME: standalone
      RDBMS_HOST: postgres
      OLLAMA_SERVER_EXECUTION: true
    depends_on:
      - postgres
      - standalone
      - ollama-service
    networks:
      - milvus
      - backend

  scouting-llm-frontend:
    image: scouting-llm-frontend:1.0.0
    restart: always
    ports:
      - "4000:4000"
    environment:
      VITE_PORT: 4000
#      VITE_BACKEND_URL: http://scouting-llm-backend:5000
      VITE_BACKEND_URL: http://localhost:5000
    depends_on:
      - scouting-llm-backend
    networks:
      - backend


networks:
  milvus:
  backend:

volumes:
  postgres_data_backend:
  ollama: